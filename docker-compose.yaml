networks:
  monitoring:
    driver: bridge
volumes:
  prometheus_data: {}
services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:latest
    user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - /home/dawid/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /home/dawid/monitoring/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9999:9090
    networks:
      - monitoring
  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    container_name: alertmanager
    user: "1000"
    ports:
      - "9093:9093"
    restart: unless-stopped
    volumes:
      - /home/dawid/monitoring/prometheus/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - /home/dawid/monitoring/prometheus/alertmanager/data:/data
  grafana:
    image: grafana/grafana:latest
    user: "1000"
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ~/monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ~/monitoring/grafana:/var/lib/grafana
    networks:
      - monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8081:8080
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - monitoring
  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - /home/dawid/monitoring/loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml
  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /home/dawid/monitoring/promtail:/etc/promtail
      - /var/log:/var/log
    command: -config.file=/etc/promtail/promtail-config.yaml
  pve-exporter:
    image: prompve/prometheus-pve-exporter
    container_name: pve-exporter
    ports:
      - '9221:9221'
    restart: unless-stopped
    volumes:
      - ./pve/pve.yml:/etc/prometheus/pve.yml